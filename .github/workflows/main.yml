name: Deploy Laravel App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath, zip
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Install Composer dependencies
      run: composer install --no-dev --prefer-dist --optimize-autoloader --no-progress
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Set directory permissions
      run: chmod -R 775 storage bootstrap/cache
    
    - name: Debug SSH key
      run: |
        echo "Setting up SSH key..."
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/deploy_key
    
    - name: Test SSH connection
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'echo "SSH connection successful"'
    
    - name: Deploy to server using rsync
      run: |
        rsync -avz --delete \
          -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
          ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/var/www/your-project/
    
    - name: Execute deployment commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/your-project
          php artisan down
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan optimize
          chown -R www-data:www-data .
          chmod -R 775 storage bootstrap/cache
          php artisan up
          sudo systemctl restart php8.0-fpm
          sudo systemctl restart nginx
